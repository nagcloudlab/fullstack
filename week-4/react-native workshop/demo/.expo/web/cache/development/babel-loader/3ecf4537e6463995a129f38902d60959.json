{"ast":null,"code":"var _jsxFileName = \"/Users/nag/Desktop/fullstack/week-4/react-native workshop/demo/app/screens/ListingsScreen.js\";\nimport React, { useEffect, useState } from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Card from \"../components/Card\";\nimport colors from \"../config/colors\";\nimport Screen from \"../components/Screen\";\nimport listingsApi from \"../api/listings\";\nimport AppText from \"../components/Text\";\nimport { Button } from \"react-native-elements\";\nimport ActivityIndicator from \"../components/ActivityIndicator\";\nimport useApi from \"../hooks/useApi\";\n\nfunction ListingsScreen(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _useApi = useApi(listingsApi.getListings),\n      listings = _useApi.data,\n      error = _useApi.error,\n      loading = _useApi.loading,\n      request = _useApi.request;\n\n  useEffect(function () {\n    request();\n  }, []);\n  return React.createElement(Screen, {\n    style: styles.screen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, error && React.createElement(React.Fragment, null, React.createElement(AppText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, \"Couldn't retrieve the listings.\"), React.createElement(Button, {\n    title: \"Retry\",\n    onPress: request,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  })), React.createElement(ActivityIndicator, {\n    visible: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }), React.createElement(FlatList, {\n    data: listings,\n    keyExtractor: function keyExtractor(listing) {\n      return listing.id.toString();\n    },\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(Card, {\n        title: item.title,\n        subTitle: \"$\" + item.price,\n        image: item.image,\n        onPress: function onPress() {\n          return navigation.navigate('ListingDetails', item);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar styles = StyleSheet.create({\n  screen: {\n    padding: 20,\n    backgroundColor: colors.light\n  }\n});\nexport default ListingsScreen;","map":{"version":3,"sources":["/Users/nag/Desktop/fullstack/week-4/react-native workshop/demo/app/screens/ListingsScreen.js"],"names":["React","useEffect","useState","Card","colors","Screen","listingsApi","AppText","Button","ActivityIndicator","useApi","ListingsScreen","navigation","getListings","listings","data","error","loading","request","styles","screen","listing","id","toString","item","title","price","image","navigate","StyleSheet","create","padding","backgroundColor","light"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAGA,OAAOC,IAAP;AACA,OAAOC,MAAP;AACA,OAAOC,MAAP;AAEA,OAAOC,WAAP;AACA,OAAOC,OAAP;AACA,SAASC,MAAT,QAAuB,uBAAvB;AAGA,OAAOC,iBAAP;AAEA,OAAOC,MAAP;;AAGA,SAASC,cAAT,OAAwC;AAAA;;AAAA,MAAdC,UAAc,QAAdA,UAAc;;AAAA,gBAEcF,MAAM,CAACJ,WAAW,CAACO,WAAb,CAFpB;AAAA,MAExBC,QAFwB,WAE9BC,IAF8B;AAAA,MAEdC,KAFc,WAEdA,KAFc;AAAA,MAEPC,OAFO,WAEPA,OAFO;AAAA,MAEEC,OAFF,WAEEA,OAFF;;AAItCjB,EAAAA,SAAS,CAAC,YAAM;AACdiB,IAAAA,OAAO;AACR,GAFQ,EAEN,EAFM,CAAT;AAKA,SACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAEC,MAAM,CAACC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,KAAK,IACJ,0CACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADF,EAEE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,OAAd;AAAsB,IAAA,OAAO,EAAEE,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAFJ,EAQE,oBAAC,iBAAD;AAAmB,IAAA,OAAO,EAAED,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EAWE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAEH,QADR;AAEE,IAAA,YAAY,EAAE,sBAACO,OAAD;AAAA,aAAaA,OAAO,CAACC,EAAR,CAAWC,QAAX,EAAb;AAAA,KAFhB;AAGE,IAAA,UAAU,EAAE;AAAA,UAAGC,IAAH,SAAGA,IAAH;AAAA,aACV,oBAAC,IAAD;AACE,QAAA,KAAK,EAAEA,IAAI,CAACC,KADd;AAEE,QAAA,QAAQ,EAAE,MAAMD,IAAI,CAACE,KAFvB;AAGE,QAAA,KAAK,EAAEF,IAAI,CAACG,KAHd;AAIE,QAAA,OAAO,EAAE;AAAA,iBAAMf,UAAU,CAACgB,QAAX,CAAoB,gBAApB,EAAsCJ,IAAtC,CAAN;AAAA,SAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADU;AAAA,KAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,CADF;AA2BD;;AAED,IAAML,MAAM,GAAGU,UAAU,CAACC,MAAX,CAAkB;AAC/BV,EAAAA,MAAM,EAAE;AACNW,IAAAA,OAAO,EAAE,EADH;AAENC,IAAAA,eAAe,EAAE5B,MAAM,CAAC6B;AAFlB;AADuB,CAAlB,CAAf;AAOA,eAAetB,cAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { FlatList, StyleSheet } from \"react-native\";\n\nimport Card from \"../components/Card\";\nimport colors from \"../config/colors\";\nimport Screen from \"../components/Screen\";\n\nimport listingsApi from \"../api/listings\";\nimport AppText from \"../components/Text\";\nimport { Button } from \"react-native-elements\";\n\n\nimport ActivityIndicator from \"../components/ActivityIndicator\";\n\nimport useApi from \"../hooks/useApi\";\n\n\nfunction ListingsScreen({ navigation }) {\n\n  const { data: listings, error, loading, request } = useApi(listingsApi.getListings);\n\n  useEffect(() => {\n    request()\n  }, [])\n\n\n  return (\n    <Screen style={styles.screen}>\n      {error && (\n        <>\n          <AppText>Couldn't retrieve the listings.</AppText>\n          <Button title=\"Retry\" onPress={request} />\n        </>\n      )}\n\n      <ActivityIndicator visible={loading} />\n\n\n      <FlatList\n        data={listings}\n        keyExtractor={(listing) => listing.id.toString()}\n        renderItem={({ item }) => (\n          <Card\n            title={item.title}\n            subTitle={\"$\" + item.price}\n            image={item.image}\n            onPress={() => navigation.navigate('ListingDetails', item)}\n          />\n        )}\n      />\n\n    </Screen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  screen: {\n    padding: 20,\n    backgroundColor: colors.light,\n  },\n});\n\nexport default ListingsScreen;\n"]},"metadata":{},"sourceType":"module"}