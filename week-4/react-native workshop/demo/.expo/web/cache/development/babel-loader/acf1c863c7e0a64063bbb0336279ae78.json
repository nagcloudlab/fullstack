{"ast":null,"code":"var _jsxFileName = \"/Users/nag/Desktop/fullstack/week-4/react-native workshop/demo/app/screens/UploadScreen.js\";\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport * as Progress from \"react-native-progress\";\nimport LottieView from \"lottie-react-native\";\nimport colors from \"../config/colors\";\n\nfunction UploadScreen(_ref) {\n  var onDone = _ref.onDone,\n      _ref$progress = _ref.progress,\n      progress = _ref$progress === void 0 ? 0 : _ref$progress,\n      _ref$visible = _ref.visible,\n      visible = _ref$visible === void 0 ? false : _ref$visible;\n  return React.createElement(Modal, {\n    visible: visible,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }\n  }, progress < 1 ? React.createElement(Progress.Bar, {\n    color: colors.primary,\n    progress: progress,\n    width: 200,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 21\n    }\n  }) : React.createElement(LottieView, {\n    autoPlay: true,\n    loop: false,\n    onAnimationFinish: onDone,\n    source: require(\"../assets/animations/done.json\"),\n    style: styles.animation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 25\n    }\n  })));\n}\n\nvar styles = StyleSheet.create({\n  animation: {\n    width: 150\n  },\n  container: {\n    alignItems: \"center\",\n    flex: 1,\n    justifyContent: \"center\"\n  }\n});\nexport default UploadScreen;","map":{"version":3,"sources":["/Users/nag/Desktop/fullstack/week-4/react-native workshop/demo/app/screens/UploadScreen.js"],"names":["React","Progress","LottieView","colors","UploadScreen","onDone","progress","visible","styles","container","primary","require","animation","StyleSheet","create","width","alignItems","flex","justifyContent"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,OAAO,KAAKC,QAAZ,MAA0B,uBAA1B;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AAEA,OAAOC,MAAP;;AAEA,SAASC,YAAT,OAAiE;AAAA,MAAzCC,MAAyC,QAAzCA,MAAyC;AAAA,2BAAjCC,QAAiC;AAAA,MAAjCA,QAAiC,8BAAtB,CAAsB;AAAA,0BAAnBC,OAAmB;AAAA,MAAnBA,OAAmB,6BAAT,KAAS;AAC7D,SACI,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAEA,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,QAAQ,GAAG,CAAX,GACG,oBAAC,QAAD,CAAU,GAAV;AACI,IAAA,KAAK,EAAEH,MAAM,CAACO,OADlB;AAEI,IAAA,QAAQ,EAAEJ,QAFd;AAGI,IAAA,KAAK,EAAE,GAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,GAOO,oBAAC,UAAD;AACI,IAAA,QAAQ,MADZ;AAEI,IAAA,IAAI,EAAE,KAFV;AAGI,IAAA,iBAAiB,EAAED,MAHvB;AAII,IAAA,MAAM,EAAEM,OAAO,kCAJnB;AAKI,IAAA,KAAK,EAAEH,MAAM,CAACI,SALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARZ,CADJ,CADJ;AAqBH;;AAED,IAAMJ,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC7BF,EAAAA,SAAS,EAAE;AACPG,IAAAA,KAAK,EAAE;AADA,GADkB;AAI7BN,EAAAA,SAAS,EAAE;AACPO,IAAAA,UAAU,EAAE,QADL;AAEPC,IAAAA,IAAI,EAAE,CAFC;AAGPC,IAAAA,cAAc,EAAE;AAHT;AAJkB,CAAlB,CAAf;AAWA,eAAed,YAAf","sourcesContent":["import React from \"react\";\nimport { View, StyleSheet, Modal } from \"react-native\";\nimport * as Progress from \"react-native-progress\";\nimport LottieView from \"lottie-react-native\";\n\nimport colors from \"../config/colors\";\n\nfunction UploadScreen({ onDone, progress = 0, visible = false }) {\n    return (\n        <Modal visible={visible}>\n            <View style={styles.container}>\n                {progress < 1 ? (\n                    <Progress.Bar\n                        color={colors.primary}\n                        progress={progress}\n                        width={200}\n                    />\n                ) : (\n                        <LottieView\n                            autoPlay\n                            loop={false}\n                            onAnimationFinish={onDone}\n                            source={require(\"../assets/animations/done.json\")}\n                            style={styles.animation}\n                        />\n                    )}\n            </View>\n        </Modal>\n    );\n}\n\nconst styles = StyleSheet.create({\n    animation: {\n        width: 150,\n    },\n    container: {\n        alignItems: \"center\",\n        flex: 1,\n        justifyContent: \"center\",\n    },\n});\n\nexport default UploadScreen;\n"]},"metadata":{},"sourceType":"module"}