{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport moment from \"moment\";\nvar prefix = \"cache\";\n\nvar store = function store(key, value) {\n  var item;\n  return _regeneratorRuntime.async(function store$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          item = {\n            value: value,\n            timestamp: Date.now()\n          };\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(AsyncStorage.setItem(prefix + key, JSON.stringify(item)));\n\n        case 4:\n          _context.next = 9;\n          break;\n\n        case 6:\n          _context.prev = 6;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 6]], Promise);\n};\n\nvar isExpired = function isExpired(item) {\n  var now = moment(Date.now());\n  var storedTime = moment(item.timestamp);\n  return now.diff(storedTime, \"minutes\") > 5;\n};\n\nvar get = function get(key) {\n  var value, item;\n  return _regeneratorRuntime.async(function get$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem(prefix + key));\n\n        case 3:\n          value = _context2.sent;\n          item = JSON.parse(value);\n\n          if (item) {\n            _context2.next = 7;\n            break;\n          }\n\n          return _context2.abrupt(\"return\", null);\n\n        case 7:\n          if (!isExpired(item)) {\n            _context2.next = 11;\n            break;\n          }\n\n          _context2.next = 10;\n          return _regeneratorRuntime.awrap(AsyncStorage.removeItem(prefix + key));\n\n        case 10:\n          return _context2.abrupt(\"return\", null);\n\n        case 11:\n          return _context2.abrupt(\"return\", item.value);\n\n        case 14:\n          _context2.prev = 14;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log(_context2.t0);\n\n        case 17:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 14]], Promise);\n};\n\nexport default {\n  store: store,\n  get: get\n};","map":{"version":3,"sources":["/Users/nag/Desktop/fullstack/week-4/react-native workshop/demo/app/utility/cache.js"],"names":["AsyncStorage","moment","prefix","store","key","value","item","timestamp","Date","now","setItem","JSON","stringify","console","log","isExpired","storedTime","diff","get","getItem","parse","removeItem"],"mappings":";SAASA,Y;AACT,OAAOC,MAAP,MAAmB,QAAnB;AAEA,IAAMC,MAAM,GAAG,OAAf;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAOC,GAAP,EAAYC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEAC,UAAAA,IAFA,GAEO;AACTD,YAAAA,KAAK,EAALA,KADS;AAETE,YAAAA,SAAS,EAAEC,IAAI,CAACC,GAAL;AAFF,WAFP;AAAA;AAAA,2CAMAT,YAAY,CAACU,OAAb,CAAqBR,MAAM,GAAGE,GAA9B,EAAmCO,IAAI,CAACC,SAAL,CAAeN,IAAf,CAAnC,CANA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAQNO,UAAAA,OAAO,CAACC,GAAR;;AARM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAd;;AAYA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACT,IAAD,EAAU;AACxB,MAAMG,GAAG,GAAGR,MAAM,CAACO,IAAI,CAACC,GAAL,EAAD,CAAlB;AACA,MAAMO,UAAU,GAAGf,MAAM,CAACK,IAAI,CAACC,SAAN,CAAzB;AACA,SAAOE,GAAG,CAACQ,IAAJ,CAASD,UAAT,EAAqB,SAArB,IAAkC,CAAzC;AACH,CAJD;;AAMA,IAAME,GAAG,GAAG,SAANA,GAAM,CAAOd,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEgBJ,YAAY,CAACmB,OAAb,CAAqBjB,MAAM,GAAGE,GAA9B,CAFhB;;AAAA;AAEEC,UAAAA,KAFF;AAGEC,UAAAA,IAHF,GAGSK,IAAI,CAACS,KAAL,CAAWf,KAAX,CAHT;;AAAA,cAKCC,IALD;AAAA;AAAA;AAAA;;AAAA,4CAKc,IALd;;AAAA;AAAA,eAOAS,SAAS,CAACT,IAAD,CAPT;AAAA;AAAA;AAAA;;AAAA;AAAA,2CASMN,YAAY,CAACqB,UAAb,CAAwBnB,MAAM,GAAGE,GAAjC,CATN;;AAAA;AAAA,4CAUO,IAVP;;AAAA;AAAA,4CAaGE,IAAI,CAACD,KAbR;;AAAA;AAAA;AAAA;AAeJQ,UAAAA,OAAO,CAACC,GAAR;;AAfI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAZ;;AAoBA,eAAe;AACXX,EAAAA,KAAK,EAALA,KADW;AAEXe,EAAAA,GAAG,EAAHA;AAFW,CAAf","sourcesContent":["import { AsyncStorage } from \"react-native\";\nimport moment from \"moment\";\n\nconst prefix = \"cache\";\n\nconst store = async (key, value) => {\n    try {\n        const item = {\n            value,\n            timestamp: Date.now(),\n        };\n        await AsyncStorage.setItem(prefix + key, JSON.stringify(item)); // serialize\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nconst isExpired = (item) => {\n    const now = moment(Date.now());\n    const storedTime = moment(item.timestamp);\n    return now.diff(storedTime, \"minutes\") > 5;\n};\n\nconst get = async (key) => {\n    try {\n        const value = await AsyncStorage.getItem(prefix + key); // de serialize\n        const item = JSON.parse(value);\n\n        if (!item) return null;\n\n        if (isExpired(item)) {\n            // Command Query Separation (CQS)\n            await AsyncStorage.removeItem(prefix + key);\n            return null;\n        }\n\n        return item.value;\n    } catch (error) {\n        console.log(error);\n    }\n};\n\n\nexport default {\n    store,\n    get,\n};"]},"metadata":{},"sourceType":"module"}